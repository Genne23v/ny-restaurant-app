{"version":3,"sources":["components/loading-gear.gif","components/Loading.js","WK-new-york-eats-bar.png","Restaurants.js","Restaurant.js","About.js","thought-catalog-fnztlIb52gU-unsplash.jpg","NotFound.js","components/WK-newyorkeats-01.png","components/NavBar.js","App.js","index.js"],"names":["Loading","desc","Container","style","height","Row","className","Col","xs","sm","md","position","top","Image","width","src","loading","alt","Restaurants","location","useLocation","history","useHistory","useState","page","setPage","restaurants","setRestaurants","error","setError","useEffect","url","query","queryString","parse","search","borough","fetch","then","res","ok","Error","json","result","catch","err","console","Array","isArray","length","Card","Title","Text","message","Body","backgroundImage","HeaderBg","backgroundSize","backgroundRepeat","Table","striped","bordered","hover","color","map","restaurant","onClick","push","_id","name","address","building","street","cuisine","Pagination","Prev","Item","Next","Restaurant","setRestaurant","setLoading","id","useParams","key","hasOwnProperty","bg","MapContainer","center","coord","zoom","scrollWheelZoom","TileLayer","Marker","Header","ListGroup","as","horizontal","grades","each","dateConverted","Date","date","grade","toLocaleDateString","About","Accordion","defaultActiveKey","Toggle","variant","eventKey","Collapse","href","Badge","NotFound","emptyPlate","to","NavBar","searchString","setSearchString","Navbar","expand","Brand","Logo","Nav","Link","Form","onSubmit","e","preventDefault","inline","FormControl","type","placeholder","value","onChange","target","Button","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ac1de89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading-gear.bf338819.gif\";","import loading from './loading-gear.gif';\nimport { Image, Row, Col, Container } from 'react-bootstrap';\n\nexport default function Loading({ desc }) {\n    return (\n        <Container style={{ height: '85vh' }}>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} sm={4} md={4} style={{ position: 'absolute', top: '45%' }}>\n                    <Image\n                    className='mx-4'\n                        style={{ width: '100px'}}\n                        src={loading}\n                        alt='Loading...'\n                    />\n                    <p>{desc}</p>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/WK-new-york-eats-bar.5ff61d0c.png\";","import { useState, useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport queryString from 'query-string';\nimport { Container, Card, Table, Pagination } from 'react-bootstrap';\nimport Loading from './components/Loading';\nimport HeaderBg from './WK-new-york-eats-bar.png';\n\nexport default function Restaurants() {\n    const perPage = 10;\n    let location = useLocation();\n    let history = useHistory();\n    const [page, setPage] = useState(1);\n    const [restaurants, setRestaurants] = useState(null);\n    const [error, setError] = useState(null);\n\n    function previousPage() {\n        if (page > 1) setPage(page - 1);\n    }\n\n    function nextPage() {\n        setPage(page + 1);\n    }\n\n    useEffect(() => {\n        let url;\n        let query = queryString.parse(location.search);\n\n        if (query.borough) {\n            url = `https://restaurant-api-wk.herokuapp.com/api/restaurants?page=${page}&perPage=${perPage}&borough=${query.borough}`;\n        } else {\n            url = `https://restaurant-api-wk.herokuapp.com/api/restaurants?page=${page}&perPage=${perPage}`;\n        }\n\n        fetch(url)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error(`Could not fetch restaurant data`);\n                }\n                return res.json();\n            })\n            .then((result) => {\n                setRestaurants(result);\n            })\n            .catch((err) => {\n                console.error(`Something is wrong while fetching data ${err}`);\n                setError(err);\n            });\n    }, [location, page, restaurants, error]);\n\n    if (Array.isArray(restaurants) && !restaurants.length) {\n        return (\n            <Card className='p-3'>\n                <Card.Title>\n                    No Restaurants Found for{' '}\n                    {queryString.parse(location.search).borough}\n                </Card.Title>\n            </Card>\n        );\n    }\n\n    if (error) {\n        return (\n            <Card className='p-3'>\n                <Card.Title>Something is wrong while fetching data</Card.Title>\n                <Card.Text>{error.message}</Card.Text>\n            </Card>\n        );\n    }\n\n    if (!restaurants) {\n        return (\n            <>\n                <Loading desc={'Loading restaurants...'} />\n            </>\n        );\n    }\n\n    return (\n        <Container>\n            <Card>\n                <Card.Body\n                    style={{\n                        backgroundImage: `url(${HeaderBg})`,\n                        backgroundSize: '100% 100%',\n                        backgroundRepeat: 'no-repeat',\n                    }}>\n                    <Card.Title>Restaurants List</Card.Title>\n                    <Card.Text>\n                        Full list of restaurants. Optionally sorted by borough.\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n\n            <Table className='mt-3' striped bordered hover>\n                <thead>\n                    <tr style={{\n                        color: '#333',\n                        backgroundImage:\n                            'linear-gradient(to right, #00afbc, #00efec',\n                    }}>\n                        <th className='col-4'>Name</th>\n                        <th className='col-3'>Address</th>\n                        <th className='col-2'>Borough</th>\n                        <th className='col-3'>Cuisine</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {restaurants.map((restaurant) => {\n                        return (\n                            <tr\n                                key={restaurant._id}\n                                onClick={() =>\n                                    history.push(\n                                        `/restaurant/${restaurant._id}`\n                                    )\n                                }>\n                                <td className='col-4'>{restaurant.name}</td>\n                                <td className='col-3'>\n                                    {restaurant.address.building}{' '}\n                                    {restaurant.address.street}\n                                </td>\n                                <td className='col-2'>{restaurant.borough}</td>\n                                <td className='col-3'>{restaurant.cuisine}</td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n\n            <Pagination>\n                <Pagination.Prev onClick={previousPage} />\n                <Pagination.Item>{page}</Pagination.Item>\n                <Pagination.Next onClick={nextPage} />\n            </Pagination>\n        </Container>\n    );\n}\n","import { useParams } from 'react-router';\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\nimport { Container, Card, ListGroup } from 'react-bootstrap';\nimport Loading from './components/Loading';\nimport HeaderBg from './WK-new-york-eats-bar.png';\n\nexport default function Restaurant() {\n    const [restaurant, setRestaurant] = useState(null);\n    const [loading, setLoading] = useState(true);\n    let location = useLocation();\n    const { id } = useParams();\n    let key = 0;\n\n    useEffect(() => {\n        setLoading(true);\n\n        fetch(`http://restaurant-api-wk.herokuapp.com/api/restaurants/${id}`)\n            .then((res) => {\n                if (!res.ok) {\n                    throw new Error(\n                        'Could not fetch the requested restaurant info'\n                    );\n                }\n                return res.json();\n            })\n            .then((result) => {\n                if (result.hasOwnProperty('_id')) {\n                    setRestaurant(result);\n                } else {\n                    setRestaurant(null);\n                }\n                setLoading(false);\n            })\n            .catch((err) => {\n                console.error(\n                    `Something is wrong while fetching restaurant info - ${err}`\n                );\n            });\n    }, [id, location]);\n\n    if (!restaurant) {\n        return (\n            <Card className='p-3'>\n                <Card.Title>Unable to find restaurant with id: {id}</Card.Title>\n            </Card>\n        );\n    }\n\n    if (loading) {\n        return <Loading desc={'Loading a restaurant...'} />;\n    }\n\n    return (\n        <Container>\n            <Card bg='light'>\n                <Card.Body\n                    style={{\n                        backgroundImage: `url(${HeaderBg})`,\n                        backgroundSize: '100% 100%',\n                        backgroundRepeat: 'no-repeat',\n                    }}>\n                    <Card.Title>{restaurant.name}</Card.Title>\n                    <Card.Text>\n                        {restaurant.address.building}{' '}\n                        {restaurant.address.street}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n            <MapContainer\n                className='mt-3'\n                style={{ height: '400px' }}\n                center={[\n                    restaurant.address.coord[1],\n                    restaurant.address.coord[0],\n                ]}\n                zoom={13}\n                scrollWheelZoom={false}>\n                <TileLayer url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png' />\n                <Marker\n                    position={[\n                        restaurant.address.coord[1],\n                        restaurant.address.coord[0],\n                    ]}\n                />\n            </MapContainer>\n            <Card className='mt-3'>\n                <Card.Header\n                    style={{\n                        \n                        color: 'white',\n                        backgroundImage:\n                            'linear-gradient(to right, #00afbc, #00efec',\n                    }}>\n                    <h5>Ratings</h5>\n                </Card.Header>\n                <ListGroup as='ul' className='list-group-flush' horizontal>\n                    {restaurant.grades.map((each) => {\n                        const dateConverted = new Date(each.date);\n                        return (\n                            <ListGroup.Item key={key++}>\n                                <h6>Grade: {each.grade}</h6>\n                                <p>\n                                    Date: {dateConverted.toLocaleDateString()}\n                                </p>\n                            </ListGroup.Item>\n                        );\n                    })}\n                </ListGroup>\n            </Card>\n        </Container>\n    );\n}\n","import React from 'react';\nimport { Card, Accordion, Badge } from 'react-bootstrap';\n\nexport default function About() {\n    return (\n        <>\n            <Accordion className='mt-3' defaultActiveKey='0'>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle\n                            as={Card.Header}\n                            variant='link'\n                            eventKey='0'>\n                            <b>Hello, I'm Wonkeun!</b>\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey='0'>\n                        <Card.Body>\n                            I love JS stack web development, Object-Oriented\n                            Programming and Linux embedded programming.\n                            Programming has become my part of every day life.\n                            <br />\n                            I'm not sure where my career will reside in the\n                            future yet. There will be a lot more to come for my\n                            career as a programmer. Stay tuned!\n                            <br />\n                            <br />\n                            <h5>Contact</h5>\n                            <h5>\n                                <a href='https://www.linkedin.com/in/wonkeun-no-09840520/'>\n                                    <Badge variant='primary'> LinkedIn</Badge>\n                                </a>\n                                {'  '}\n\n                                <a href='https://github.com/Genne23v/Airbnb_clone'>\n                                    <Badge variant='dark'>GitHub</Badge>\n                                </a>\n                                {'  '}\n\n                                <a href='mailto:wno@myseneca.ca'>\n                                    <Badge variant='danger'>Mail</Badge>\n                                </a>\n                            </h5>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle\n                            as={Card.Header}\n                            variant='link'\n                            eventKey='1'>\n                            <b>Latest Projects</b>\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey='1'>\n                        <Card.Body>\n                            <Accordion>\n                                <Card>\n                                    <Accordion.Toggle\n                                        as={Card.Header}\n                                        eventKey='2'>\n                                        <h6>\n                                            Airbnb Clone{'  '}\n                                            <Badge variant='primary'>New</Badge>\n                                        </h6>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey='2'>\n                                        <Card.Body>\n                                            Airbnb clone full-stack website\n                                            using Node.js, MongoDB, Heroku. Used\n                                            handlebars to template front-end and\n                                            a combination of pure CSS and\n                                            Bootstrap. User input validation,\n                                            user authentication, admin/user\n                                            authorization, data object CRUD\n                                            operations are implemented.\n                                            <br />\n                                            <a href='https://github.com/Genne23v/Airbnb_clone'>\n                                                GitHub Repo\n                                            </a>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n\n                                <Card>\n                                    <Accordion.Toggle\n                                        as={Card.Header}\n                                        eventKey='3'>\n                                        <h6>\n                                            Travel Post{'  '}\n                                            <Badge variant='primary'>New</Badge>\n                                        </h6>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey='3'>\n                                        <Card.Body>\n                                            Travel front-end page inspired by\n                                            world travellers. Pure HTML &amp;\n                                            CSS webpage using SmoothScroll and\n                                            OwlCarousel libraries.\n                                            <br />\n                                            <a href='https://github.com/Genne23v/WK-Travel-Post'>\n                                                GitHub Repo\n                                            </a>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n\n                                <Card>\n                                    <Accordion.Toggle\n                                        as={Card.Header}\n                                        eventKey='4'>\n                                        <h6>React Scheduler</h6>\n                                    </Accordion.Toggle>\n                                    <Accordion.Collapse eventKey='4'>\n                                        <Card.Body>\n                                            Scheduler app using React, Bootstrap\n                                            and Tailwind CSS <br />\n                                            <a href='https://github.com/Genne23v/react-scheduler'>\n                                                GitHub Repo\n                                            </a>\n                                        </Card.Body>\n                                    </Accordion.Collapse>\n                                </Card>\n                            </Accordion>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n\n                <Card>\n                    <Card.Header>\n                        <Accordion.Toggle\n                            as={Card.Header}\n                            variant='link'\n                            eventKey='5'>\n                            <b>Tech Stack That I Use &amp; Interests</b>\n                        </Accordion.Toggle>\n                    </Card.Header>\n                    <Accordion.Collapse eventKey='5'>\n                        <Card.Body>\n                            <ul>\n                                <li>\n                                    Web Development{'  '}\n                                    <Badge variant='primary'>HTML</Badge>{' '}\n                                    <Badge variant='danger'>CSS</Badge>{' '}\n                                    <Badge variant='warning'>JavaScript</Badge>{' '}\n                                    <Badge variant='success'>Node.js</Badge>{' '}\n                                    <Badge variant='info'>React.js</Badge>{' '}\n                                    <Badge variant='primary'>Bootstrap</Badge>{' '}\n                                    <Badge variant='secondary'>SASS</Badge>{' '}\n                                    <Badge variant='primary'>\n                                        Visual Studio Code\n                                    </Badge>\n                                </li>\n                                <li>\n                                    Object Oriented Programming{'  '}\n                                    <Badge variant='primary'>C++</Badge>{' '}\n                                    <Badge variant='info'>Java</Badge>{' '}\n                                    <Badge variant='warning'>UML</Badge>{' '}\n                                    <Badge variant='secondary'>\n                                        Visual Studio\n                                    </Badge>{' '}\n                                    <Badge variant='dark'>Eclipse</Badge>\n                                </li>\n                                <li>\n                                    Linux/Unix and Embedded Programming{'  '}\n                                    <Badge variant='primary'>C</Badge>{' '}\n                                    <Badge variant='danger'>Ubuntu</Badge>{' '}\n                                    <Badge variant='dark'>\n                                        Linux Kernel Debugging\n                                    </Badge>{' '}\n                                    <Badge variant='danger'>Raspberry Pi</Badge>\n                                </li>\n                                <li>\n                                    Version Control &amp; Deployment{'  '}\n                                    <Badge variant='danger'>Git</Badge>{' '}\n                                    <Badge variant='dark'>GitHub</Badge>{' '}\n                                    <Badge variant='secondary'>Heroku</Badge>\n                                </li>\n                            </ul>\n                        </Card.Body>\n                    </Accordion.Collapse>\n                </Card>\n            </Accordion>\n        </>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/thought-catalog-fnztlIb52gU-unsplash.a59b01b5.jpg\";","import { Link } from 'react-router-dom';\nimport { Card, Image } from 'react-bootstrap';\nimport emptyPlate from './thought-catalog-fnztlIb52gU-unsplash.jpg';\n\nexport default function NotFound() {\n    return (\n        <Card className='p-3'>\n            <Card.Title>Page Not Found</Card.Title>\n            <Image src={emptyPlate} className='mb-2' />\n            <p>\n                We can't find what you are looking for...{'  '}\n                <Link to='/'>Return Home</Link>\n            </p>\n        </Card>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/WK-newyorkeats-01.0f9298ae.png\";","import { Navbar, Nav, Form, FormControl, Button, Image } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Logo from './WK-newyorkeats-01.png';\n\nexport default function NavBar() {\n    const [searchString, setSearchString] = useState('');\n    let history = useHistory();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        history.push(`/restaurants?borough=${searchString}`);\n        setSearchString('');\n    };\n\n    return (\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\" expand='lg' className=\"mb-3\">\n                <LinkContainer to='/'>\n                    <Navbar.Brand>\n                        <Image src={Logo} alt=\"brand-logo\" height=\"55\" className=\"mr-3\" />\n\n                        New York Restaurants</Navbar.Brand>\n                </LinkContainer>\n                <Navbar.Toggle aria-controls='basic-navbar-nav' />\n                <Navbar.Collapse id='basic-navbar-nav'>\n                    <Nav className='mr-auto'>\n                        <LinkContainer to='/restaurants'>\n                            <Nav.Link>Full List</Nav.Link>\n                        </LinkContainer>\n                        <LinkContainer to='/about'>\n                            <Nav.Link>About</Nav.Link>\n                        </LinkContainer>\n                    </Nav>\n                    <Form onSubmit={handleSubmit} inline>\n                        <FormControl\n                            type='text'\n                            placeholder='Borough'\n                            className='mr-sm-2'\n                            value={searchString}\n                            onChange={(e) => setSearchString(e.target.value)}\n                        />\n                        <Button type='submit' variant='outline-info'>\n                            Search\n                        </Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n        </>\n    );\n}\n","import React from 'react';\nimport Restaurants from './Restaurants';\nimport Restaurant from './Restaurant';\nimport About from './About';\nimport NotFound from './NotFound';\nimport NavBar from './components/NavBar';\n\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <>\n            <NavBar />\n\n            <Container>\n                <Row>\n                    <Col>\n                        <Switch>\n                            <Route exact path='/'>\n                                <Redirect to='/restaurants' />\n                            </Route>\n\n                            <Route exact path='/about'>\n                                <About />\n                            </Route>\n\n                            <Route path='/restaurants'>\n                                <Restaurants />\n                            </Route>\n\n                            <Route path='/restaurant/:id'>\n                                <Restaurant />\n                            </Route>\n\n                            <Route>\n                                <NotFound />\n                            </Route>\n                        </Switch>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}\n\nexport default App;\n","/*********************************************************************************\n * *  WEB422 – Assignment 3\n * *  I declare that this assignment is my own work in accordance with Seneca Academic Policy.  \n * *  No part of this assignment has been copied manually or electronically from any other source\n * *  (including web sites) or distributed to other students.\n * * \n * *  Name: Wonkeun No   Student ID: 145095196   Date: Oct 15, 2021\n * *\n * *\n * ********************************************************************************/\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    BrowserRouter >\n    <\n    App / >\n    <\n    /BrowserRouter> <\n    /React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}